@page "/telerik2"
@rendermode RenderMode.InteractiveServer


<PageTitle>Telerik page 2</PageTitle>
<TelerikRootComponent>
    
    <h1>Telerik page 2</h1>
    <div id="menuTelerik">
        <h6>Menu Telerik</h6>
        <TelerikMenu Data="@MenuItems" />
    </div>
    <div id="radioTelerik">
        <h6>Radio Buttons Telerik</h6>
        <TelerikRadioGroup Data="@GenderOptions"
                           @bind-Value="@ChosenGender"
                           ValueField="@nameof(GenderModel.GenderText)"
                           TextField="@nameof(GenderModel.GenderText)">
        </TelerikRadioGroup>
        <p>Выбранный пол: @ChosenGender</p>
    </div>
    <div id="toolBarTelerik">
        <h6>ToolBar Telerik</h6>
        <TelerikToolBar>
            <ToolBarButtonGroup>
                <ToolBarButton Icon="@SvgIcon.Bold" OnClick="@OnBold">Bold</ToolBarButton>
                <ToolBarButton Icon="@SvgIcon.Italic" OnClick="@OnItalic">Italic</ToolBarButton>
            </ToolBarButtonGroup>

            <ToolBarToggleButton @bind-Selected="@Selected">Toggle Button</ToolBarToggleButton>

            <ToolBarButton Icon="@SvgIcon.Undo" OnClick="@OnUndo">Undo</ToolBarButton>
        </TelerikToolBar>
        <p>@LastClicked</p>
        <p>@Selected.ToString()</p>
    </div>
    <div id="wizardTelerik">
        <h6>Wizard Telerik</h6>
        <TelerikWizard @bind-Value="@WizardValue">
            <WizardSteps>
                <WizardStep Label="Start" Icon="@SvgIcon.Gear">
                    <Content>
                        <p>Текст</p>
                    </Content>
                </WizardStep>
                <WizardStep Label="Survey" Icon="@SvgIcon.Pencil">
                    <Content>
                        <p>Текст</p>
                    </Content>
                </WizardStep>
                <WizardStep Label="Finish" Icon="SvgIcon.Check">
                    <Content>
                        <p>Текст</p>
                    </Content>
                </WizardStep>
            </WizardSteps>
        </TelerikWizard>
    </div>
    <div id="listBoxTelerik">
        <h6>ListBox Telerik</h6>
        <TelerikListBox Data="@ListBoxStrings"
                        @bind-SelectedItems="@ListBoxSelectedStrings"
                        SelectionMode="@ListBoxSelectionMode.Multiple"
                        Height="auto">
            <ListBoxToolBarSettings>
                <ListBoxToolBar Visible="false" />
            </ListBoxToolBarSettings>
        </TelerikListBox>
        <p>@ListBoxSelectedStrings.SingleOrDefault()</p>
    </div>
</TelerikRootComponent>

@code {
    public List<MenuItem> MenuItems { get; set; }

    string ChosenGender { get; set; }

    List<GenderModel> GenderOptions { get; set; } = new List<GenderModel>
    {
        new GenderModel { GenderId = 1, GenderText = "Женский" },
        new GenderModel { GenderId = 2, GenderText = "Мужской" },
    };

    bool Selected { get; set; } = true;
    string LastClicked { get; set; }
    int WizardValue { get; set; }

    private List<string> ListBoxStrings { get; set; } = ["test1", "test2", "test3", "test4", "test5",];

    private IEnumerable<string> ListBoxSelectedStrings { get; set; } = new List<string>();

    protected override void OnInitialized()
    {
        MenuItems = new List<MenuItem>()
        {
            new MenuItem()
            {
                Text = "Telerik Page", // items that don't have a URL will not render links
                Items = new List<MenuItem>()
                {
                    new MenuItem()
                    {
                        Text = "Blazor",
                        Url = "/"
                    },
                    new MenuItem()
                    {
                        Text = "Page 1",
                        Url = "telerik1"
                    },
                    new MenuItem()
                    {
                        Text = "Page 2",
                        Url = "telerik2"
                    },
                    new MenuItem()
                    {
                        Text = "Page 3",
                        Url = "telerik3"
                    }
                }
            }
        };


        base.OnInitialized();
    }

    void OnBold()
    {
        LastClicked = "Bold";
    }

    void OnItalic()
    {
        LastClicked = "Italic";
    }

    void OnUndo()
    {
        LastClicked = "Undo";
    }

    public class GenderModel
    {
        public int GenderId { get; set; }
        public string GenderText { get; set; }
    }

    public class MenuItem
    {
        public string Text { get; set; }
        public string Url { get; set; }
        public List<MenuItem> Items { get; set; }
    }
}

<style>
    h6{
        font-size: 18px;
    }

    #menuTelerik {
        padding: 10px;
        background-color: #ccc;
    }

    #radioTelerik {
        padding: 10px;
        background-color: #eee;
    }

    #toolBarTelerik {
        padding: 10px;
        background-color: #ccc;
    }

    #wizardTelerik {
        padding: 10px;
        background-color: #eee;
    }

    #listBoxTelerik {
        padding: 10px;
        background-color: #ccc;
    }
</style>